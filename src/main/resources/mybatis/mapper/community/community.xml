<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 게시글 목록 가져오기 -->
<mapper namespace="com.tech.petfriends.community.mapper.IDao">

	<select id="getPostList"
		resultType="com.tech.petfriends.community.dto.CDto">
		SELECT CD.*, RCI.*, COALESCE(MP.PET_IMG, 'noPetImg.jpg') AS
		PET_IMG
		FROM COMMUNITY_BOARD CD
		LEFT JOIN RE_CBOARD_IMAGE RCI ON
		CD.BOARD_NO = RCI.BOARD_NO
		LEFT JOIN MEMBER_PET MP ON CD.MEM_CODE =
		MP.MEM_CODE AND MP.PET_MAIN =
		'Y'
		ORDER BY CD.BOARD_NO DESC
	</select>

	<!-- 전체 게시글 개수 조회 -->
	<select id="getTotalPostCount" resultType="int">
		SELECT COUNT(*) FROM COMMUNITY_BOARD
	</select>

	<select id="getPetIMG"
		resultType="com.tech.petfriends.community.dto.CDto">
		SELECT COALESCE(PET_IMG, 'noPetImg.jpg') AS PET_IMG
		FROM
		MEMBER_PET
		WHERE MEM_CODE = #{mem_code}
		AND PET_MAIN = 'Y'
	</select>


	<insert id="write">
		INSERT INTO COMMUNITY_BOARD (BOARD_NO,
		B_CATE_NO,
		MEM_CODE, USER_ID,
		BOARD_TITLE, BOARD_CONTENT,
		BOARD_CREATED,
		BOARD_MODIFIED,
		BOARD_VIEWS, BOARD_LIKES,
		BOARD_COMMENT_COUNT,
		BOARD_CONTENT_INPUT)
		VALUES
		(COMMUNITY_BOARD_SEQ.NEXTVAL,
		#{b_cate_no},#{mem_code}, #{mem_nick},
		#{board_title},
		#{board_content},SYSDATE, null, 0, 0,
		0,#{board_content_input} )
	</insert>

	<select id="selBid" resultType="_int">
		SELECT MAX(BOARD_NO) FROM
		COMMUNITY_BOARD
	</select>

	<insert id="imgWrite">
		INSERT INTO RE_CBOARD_IMAGE(REBNO, BOARD_NO,
		CORGFILE, CCHGFILE, OREPFILE, CHREPFILE) VALUES
		(RE_CBOARD_IMAGE_SEQ.NEXTVAL,
		#{board_no}, #{originalFile},
		#{changeFile}, #{repImgOriginal}, #{repImgChange})
	</insert>

	<select id="contentView"
		resultType="com.tech.petfriends.community.dto.CDto">
		SELECT CD.*, RCI.*, COALESCE(MP.PET_IMG, 'noPetImg.jpg') AS
		PET_IMG
		FROM COMMUNITY_BOARD CD
		LEFT JOIN RE_CBOARD_IMAGE RCI ON
		CD.BOARD_NO = RCI.BOARD_NO
		LEFT JOIN MEMBER_PET MP ON CD.MEM_CODE =
		MP.MEM_CODE AND MP.PET_MAIN =
		'Y'
		WHERE CD.BOARD_NO = #{board_no}
	</select>


	<select id="selectImg"
		resultType="com.tech.petfriends.community.dto.CDto">
		SELECT * FROM RE_CBOARD_IMAGE WHERE BOARD_NO = #{board_no}
	</select>

	<select id="getCategoryList"
		resultType="com.tech.petfriends.community.dto.CCategoryDto">
		SELECT B_CATE_NO, B_CATE_NAME FROM BOARD_CATEGORY
	</select>


	<select id="getPostsByCategory" parameterType="int"
		resultType="com.tech.petfriends.community.dto.CDto"> SELECT CB.*,
		RCI.CHREPFILE, NVL(MP.PET_IMG, 'NOPETIMG.JPG') AS PET_IMG FROM
		COMMUNITY_BOARD CB LEFT JOIN RE_CBOARD_IMAGE RCI ON CB.BOARD_NO =
		RCI.BOARD_NO LEFT JOIN MEMBER_PET MP ON CB.MEM_CODE = MP.MEM_CODE AND
		MP.PET_MAIN = 'Y' <if test="b_cate_no != 0">
			WHERE CB.B_CATE_NO = #{b_cate_no}
		</if>
		<if test="b_cate_no == 0">
		</if> ORDER BY CB.BOARD_NO DESC </select>


	<select id="getAllPosts"
		resultType="com.tech.petfriends.community.dto.CDto">
		SELECT * FROM COMMUNITY_BOARD
	</select>


	<update id="modify">
		UPDATE COMMUNITY_BOARD
		SET BOARD_TITLE = #{param2},
		BOARD_CONTENT = #{param3},
		BOARD_MODIFIED = CURRENT_TIMESTAMP,
		B_CATE_NO = #{param4}
		WHERE BOARD_NO = #{param1}
	</update>

	<update id="modifyImg">
		UPDATE RE_CBOARD_IMAGE
		SET CORGFILE = #{originalFile},
		CCHGFILE = #{changeFile},
		OREPFILE = #{repImgOriginal},
		CHREPFILE =
		#{repImgChange}
		WHERE BOARD_NO = #{board_no}
	</update>


	<delete id="deleteLikes">
		DELETE FROM COMMUNITY_LIKES WHERE BOARD_NO =
		#{board_no}
	</delete>

	<delete id="deleteComments">
		DELETE FROM COMMUNITY_COMMENT WHERE BOARD_NO =
		#{board_no}
	</delete>

	<delete id="delete">
		DELETE FROM COMMUNITY_BOARD WHERE BOARD_NO =
		#{board_no}
	</delete>

	<delete id="deleteReports">
		DELETE FROM COMMUNITY_REPORT WHERE BOARD_NO =
		#{board_no}
	</delete>

	<delete id="deleteImages">
		DELETE FROM RE_CBOARD_IMAGE WHERE BOARD_NO =
		#{board_no}
	</delete>


	<insert id="comment">
		INSERT INTO COMMUNITY_COMMENT (COMMENT_NO, BOARD_NO,
		USER_ID,
		COMMENT_CONTENT, CREATED_DATE, PARENT_COMMENT_NO,
		COMMENT_LEVEL,
		COMMENT_ORDER_NO, EDITED_DATE, MEM_CODE)
		VALUES
		(COMMUNITY_COMMENT_SEQ.NEXTVAL, #{board_no}, #{mem_nick},
		#{comment_content}, SYSDATE, COMMUNITY_COMMENT_SEQ.CURRVAL,0,0,
		SYSDATE,
		#{mem_code})
	</insert>

	<select id="commentList"
		resultType="com.tech.petfriends.community.dto.CCommentDto">
		SELECT DISTINCT CC.*, MP.PET_IMG
		FROM COMMUNITY_COMMENT CC
		LEFT JOIN MEMBER_PET MP ON CC.MEM_CODE = MP.MEM_CODE AND MP.PET_MAIN =
		'Y'
		WHERE CC.COMMENT_LEVEL = 0
		AND CC.BOARD_NO = #{board_no}
		ORDER BY
		CC.COMMENT_NO
	</select>

	<insert id="commentReply">
		INSERT INTO COMMUNITY_COMMENT (COMMENT_NO, BOARD_NO,
		USER_ID,
		COMMENT_CONTENT, CREATED_DATE, PARENT_COMMENT_NO,
		COMMENT_LEVEL,
		COMMENT_ORDER_NO, EDITED_DATE, MEM_CODE)
		VALUES
		(COMMUNITY_COMMENT_SEQ.NEXTVAL, #{board_no}, #{mem_nick},
		#{comment_content}, SYSDATE, #{parent_comment_no}, #{comment_level} +
		1,
		#{comment_order_no} + 1, SYSDATE, #{mem_code})
	</insert>

	<select id="commentReplyList"
		resultType="com.tech.petfriends.community.dto.CCommentDto">
		SELECT CC.*, MP.PET_IMG
		FROM COMMUNITY_COMMENT CC
		LEFT JOIN
		MEMBER_PET MP ON CC.MEM_CODE = MP.MEM_CODE AND MP.PET_MAIN = 'Y'
		WHERE
		CC.COMMENT_LEVEL >= 1
		AND CC.BOARD_NO = #{board_no}
		ORDER BY
		CC.COMMENT_LEVEL
	</select>

	<update id="commentShape">
		UPDATE COMMUNITY_COMMENT
		SET
		comment_level=comment_level + 1
		WHERE PARENT_COMMENT_NO=#{param1} AND
		COMMENT_LEVEL > #{param2}
	</update>


	<delete id="replyDelete">
		DELETE FROM COMMUNITY_COMMENT
		WHERE (SELECT
		COUNT(COMMENT_NO) FROM COMMUNITY_COMMENT
		WHERE
		PARENT_COMMENT_NO=#{parent_comment_no}
		AND COMMENT_LEVEL =
		#{comment_level}+1
		AND COMMENT_ORDER_NO > #{comment_order_no})=0
		AND
		COMMENT_NO=#{comment_no}
	</delete>


	<update id="managerReplyUpdate">
		UPDATE COMMUNITY_COMMENT
		SET
		USER_ID = #{user_id},
		COMMENT_CONTENT = '관리자에 의해 댓글이 삭제됐습니다.',
		MEM_CODE = #{mem_code}
		WHERE COMMENT_NO = #{comment_no}
	</update>


	<update id="stepInit">
		UPDATE COMMUNITY_COMMENT SET
		COMMENT_LEVEL=COMMENT_LEVEL-1
		WHERE PARENT_COMMENT_NO =
		#{parent_comment_no}
		AND COMMENT_LEVEL> #{comment_level}
	</update>

	<insert id="addLike">
		INSERT INTO COMMUNITY_LIKES
		(LIKE_ID, BOARD_NO,
		USER_ID, CREATED_DATE, MEM_CODE)
		VALUES (COMMUNITY_LIKES_SEQ.NEXTVAL,
		#{board_no}, #{mem_nick}, SYSDATE,
		#{mem_code})
	</insert>

	<delete id="removeLike">
		DELETE FROM COMMUNITY_LIKES
		WHERE board_no =
		#{board_no} AND MEM_CODE = #{mem_code}
	</delete>

	<select id="isLiked" resultType="int">
		SELECT COUNT(*) FROM
		COMMUNITY_LIKES
		WHERE BOARD_NO = #{board_no} AND MEM_CODE = #{mem_code}
	</select>


	<select id="getLikesCount" resultType="int">
		SELECT COUNT(*) FROM
		COMMUNITY_LIKES
		WHERE BOARD_NO = #{board_no}
	</select>

	<select id="getHotTopicList"
		resultType="com.tech.petfriends.community.dto.CDto">
		SELECT *
		FROM (
		SELECT CB.BOARD_NO,
		CB.BOARD_TITLE,
		(CB.BOARD_LIKES + CB.BOARD_COMMENT_COUNT) AS TOTAL_COUNT,
		RCI.CHREPFILE
		FROM COMMUNITY_BOARD CB
		LEFT JOIN RE_CBOARD_IMAGE RCI
		ON CB.BOARD_NO = RCI.BOARD_NO
		ORDER BY TOTAL_COUNT DESC
		)
		WHERE ROWNUM BETWEEN 1 AND 4
	</select>
	
	<insert id="addFeed">
		INSERT INTO COMMUNITY_FEED (FEED_NO, MEM_CODE,
		BOARD_NO, USER_ID)
		VALUES (COMMUNITY_FEED_SEQ.NEXTVAL, #{mem_code},
		#{board_no},
		#{mem_nick})
	</insert>


	<select id="myFeedList"
		resultType="com.tech.petfriends.community.dto.CDto">
		SELECT CD.*, RCI.*, COALESCE(MP.PET_IMG, 'noPetImg.jpg') AS
		PET_IMG,
		CF.*, CF.USER_ID
		FROM COMMUNITY_BOARD CD
		LEFT JOIN
		RE_CBOARD_IMAGE RCI ON CD.BOARD_NO = RCI.BOARD_NO
		LEFT JOIN MEMBER_PET
		MP ON CD.MEM_CODE = MP.MEM_CODE AND MP.PET_MAIN =
		'Y'
		LEFT JOIN
		COMMUNITY_FEED CF ON CD.BOARD_NO = CF.BOARD_NO
		WHERE CD.MEM_CODE =
		#{mem_code}
		ORDER BY CD.BOARD_NO DESC
	</select>

	<select id="myFeedName"
		resultType="com.tech.petfriends.community.dto.CDto">
		SELECT MEM_NICK
		FROM MEMBER
		WHERE MEM_CODE = #{mem_code}
	</select>

	<insert id="report">
		INSERT INTO COMMUNITY_REPORT (REPORT_ID, BOARD_NO,
		REPORTER_ID,
		REASON, REPORT_DATE, STATUS, COMMENT_NO, REPORT_TYPE,
		MEM_CODE)
		VALUES
		(COMMUNITY_REPORT_SEQ.NEXTVAL, #{board_no},
		#{reporter_id},
		#{reason}, SYSDATE, DEFAULT, #{comment_no},
		#{report_type}, #{mem_code})
	</insert>

	<update id="incrementViews" parameterType="String">
		UPDATE COMMUNITY_BOARD
		SET BOARD_VIEWS = BOARD_VIEWS + 1
		WHERE BOARD_NO = #{board_no}
	</update>

	<insert id="addFriend">
		INSERT INTO COMMUNITY_FRIEND (FRIEND_NO, MEM_NICK,
		FRIEND_MEM_NICK, FRIEND_CREATED)
		VALUES(COMMUNITY_FRIEND_SEQ.NEXTVAL,
		#{mem_nick}, #{friend_mem_nick}, SYSDATE)

	</insert>

	<select id="isFriend" resultType="int">
		SELECT COUNT(*)
		FROM
		COMMUNITY_FRIEND
		WHERE MEM_NICK = #{mem_nick} AND FRIEND_MEM_NICK =
		#{friend_mem_nick}
	</select>


	<delete id="deleteFriend">
		DELETE FROM COMMUNITY_FRIEND WHERE MEM_NICK = #{mem_nick}
		AND FRIEND_MEM_NICK = #{friend_mem_nick}
	</delete>

	<select id="getNeighborList"
		resultType="com.tech.petfriends.community.dto.CCommunityFriendDto">
		SELECT
		CF.FRIEND_MEM_NICK,
		M.MEM_CODE AS FRIEND_MEM_CODE,
		MP.PET_IMG
		FROM
		COMMUNITY_FRIEND CF
		LEFT JOIN
		MEMBER M ON M.MEM_NICK =
		CF.FRIEND_MEM_NICK
		LEFT JOIN
		MEMBER_PET MP ON MP.MEM_CODE = M.MEM_CODE
		AND MP.PET_MAIN = 'Y'
		WHERE
		CF.MEM_NICK = #{mem_nick}
	</select>

	<select id="storyList"
		resultType="com.tech.petfriends.community.dto.CDto">
		SELECT * FROM (
		SELECT B.*,
		NVL(P.PET_IMG, 'nopetimg.jpg') AS PET_IMG,
		F.FRIEND_MEM_NICK,
		ROW_NUMBER() OVER (PARTITION BY B.USER_ID ORDER BY B.BOARD_CREATED DESC)
		AS rn
		FROM COMMUNITY_BOARD B
		LEFT JOIN MEMBER_PET P ON B.MEM_CODE = P.MEM_CODE AND P.PET_MAIN = 'Y'
		INNER JOIN COMMUNITY_FRIEND F ON B.USER_ID = F.FRIEND_MEM_NICK
		WHERE B.BOARD_CREATED >= SYSDATE - INTERVAL '1' DAY
		AND F.MEM_NICK = #{mem_nick}
		) story
		WHERE story.rn = 1
		ORDER BY story.BOARD_CREATED DESC
	</select>


	<!-- 제목, 내용, 작성자에서 검색 -->
	<select id="searchPosts"
		resultType="com.tech.petfriends.community.dto.CDto">
		SELECT CD.*, RCI.*, COALESCE(MP.PET_IMG, 'noPetImg.jpg') AS
		PET_IMG
		FROM COMMUNITY_BOARD CD
		LEFT JOIN RE_CBOARD_IMAGE RCI ON
		CD.BOARD_NO = RCI.BOARD_NO
		LEFT JOIN MEMBER_PET MP ON CD.MEM_CODE =
		MP.MEM_CODE AND MP.PET_MAIN = 'Y'
		WHERE BOARD_TITLE LIKE '%' ||
		#{query} || '%'
		OR BOARD_CONTENT_INPUT LIKE '%' || #{query} || '%'
		OR
		USER_ID LIKE '%' || #{query} || '%'
		ORDER BY BOARD_CREATED DESC
	</select>

	<insert id="commentActivity">
		INSERT INTO COMMUNITY_ACTIVITY(ACTIVITY_NO, USER_ID,
		ACTIVITY_TYPE, RELATED_USER_ID, BOARD_NO, CONTENT,CREATED_AT) VALUES
		(COMMUNITY_ACTIVITY_SEQ.NEXTVAL, #{user_id},
		'댓글', #{related_user_id},
		#{board_no}, #{content}, SYSDATE)
	</insert>


	<insert id="likeActivity">
		INSERT INTO COMMUNITY_ACTIVITY(ACTIVITY_NO, USER_ID,
		ACTIVITY_TYPE, RELATED_USER_ID, BOARD_NO, CREATED_AT) VALUES
		(COMMUNITY_ACTIVITY_SEQ.NEXTVAL, #{user_id},
		'좋아요', #{related_user_id},
		#{board_no}, SYSDATE)
	</insert>


	<insert id="friendActivity">
		INSERT INTO COMMUNITY_ACTIVITY(ACTIVITY_NO, USER_ID,
		ACTIVITY_TYPE, RELATED_USER_ID, CREATED_AT) VALUES
		(COMMUNITY_ACTIVITY_SEQ.NEXTVAL, #{user_id},
		'친구추가',
		#{related_user_id}, SYSDATE)
	</insert>


	<select id="myActivityList"
		resultType="com.tech.petfriends.community.dto.CDto">
		SELECT
		CA.*,
		M1.MEM_CODE AS USER_MEM_CODE,
		M2.MEM_CODE AS
		RELATED_USER_MEM_CODE
		FROM
		COMMUNITY_ACTIVITY CA
		JOIN
		MEMBER M1 ON
		CA.USER_ID = M1.MEM_NICK
		JOIN
		MEMBER M2 ON CA.RELATED_USER_ID =
		M2.MEM_NICK
		WHERE
		M1.MEM_NICK = #{user_id}
		ORDER BY
		CA.CREATED_AT DESC
	</select>

	<select id="userActivityList"
		resultType="com.tech.petfriends.community.dto.CDto">
		SELECT
		ca.*,
		m.mem_code AS related_user_mem_code
		FROM
		COMMUNITY_ACTIVITY ca
		JOIN
		member m ON ca.USER_ID = m.mem_nick
		WHERE
		ca.RELATED_USER_ID = #{user_id}
		ORDER BY
		ca.CREATED_AT DESC
	</select>

	<insert id="insertMessage"
		parameterType="com.tech.petfriends.community.dto.CDto">
		INSERT INTO COMMUNITY_CHAT (MESSAGE_ID, SENDER,
		RECEIVER,
		MESSAGE_CONTENT, MESSAGE_DATE, ROOM_ID)
		VALUES
		(COMMUNITY_CHAT_SEQ.NEXTVAL,#{sender}, #{receiver},
		#{message_content}, SYSDATE, #{room_id})
	</insert>

	<select id="getChatHistory"
		resultType="com.tech.petfriends.community.dto.CChatDto">

		SELECT *
		FROM COMMUNITY_CHAT WHERE ROOM_ID = #{room_id}
	</select>


	<select id="getChatRooms"
		resultType="com.tech.petfriends.community.dto.CChatDto">

		SELECT ROOM_ID,
		MIN(sender) AS sender,
		MIN(receiver) AS
		receiver
		FROM COMMUNITY_CHAT
		WHERE ROOM_ID LIKE '%' || #{sender} || '%'
		GROUP BY ROOM_ID
	</select>


	<update id="totalVisits" parameterType="String">
		UPDATE COMMUNITY_MYFEED
		SET TOTAL_VISITS = TOTAL_VISITS + 1
		WHERE MEM_CODE = #{mem_code}
	</update>


	<update id="dailyVisits" parameterType="String">
		UPDATE COMMUNITY_MYFEED
		SET DAILY_VISITS = DAILY_VISITS + 1
		WHERE MEM_CODE = #{mem_code}
	</update>

	<select id="getMyfeedVisit"
		resultType="com.tech.petfriends.community.dto.CDto">
		SELECT *
		FROM COMMUNITY_MYFEED
		WHERE MEM_CODE = #{mem_code}
	</select>


	<update id="myFeedImgWrite">
		UPDATE COMMUNITY_MYFEED
		SET MYFEED_IMG = #{myfeed_img}
		WHERE MEM_CODE = #{mem_code}
	</update>


</mapper>